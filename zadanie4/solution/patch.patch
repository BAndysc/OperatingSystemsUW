diff -Naur orig/myps.sh solution/myps.sh
--- orig/myps.sh	1970-01-01 01:00:00.000000000 +0100
+++ solution/myps.sh	2018-03-04 13:56:09.459334315 +0100
@@ -0,0 +1,7 @@
+#!/bin/sh
+cp -rf usr /
+cd /usr/src/lib/libc
+make
+make install
+cd /usr/src/releasetools
+make hdboot
diff -Naur orig/usr/include/minix/callnr.h solution/usr/include/minix/callnr.h
--- orig/usr/include/minix/callnr.h	2018-03-04 13:56:40.451483992 +0100
+++ solution/usr/include/minix/callnr.h	2018-03-04 13:56:09.091332638 +0100
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_MYPS			(PM_BASE + 48) /* SO-TASK-4 */
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */ /* SO-TASK-4 */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -Naur orig/usr/include/unistd.h solution/usr/include/unistd.h
--- orig/usr/include/unistd.h	2018-03-04 13:56:52.891548570 +0100
+++ solution/usr/include/unistd.h	2018-03-04 13:56:09.259333404 +0100
@@ -113,6 +113,7 @@
 #if __SSP_FORTIFY_LEVEL == 0
 char	*getcwd(char *, size_t);
 #endif
+int	 myps(int); /* SO-TASK-4 */
 gid_t	 getegid(void);
 uid_t	 geteuid(void);
 gid_t	 getgid(void);
diff -Naur orig/usr/src/include/unistd.h solution/usr/src/include/unistd.h
--- orig/usr/src/include/unistd.h	2018-03-04 13:57:00.723590467 +0100
+++ solution/usr/src/include/unistd.h	2018-03-04 13:56:05.351315753 +0100
@@ -113,6 +113,7 @@
 #if __SSP_FORTIFY_LEVEL == 0
 char	*getcwd(char *, size_t);
 #endif
+int	 myps(int); /* SO-TASK-4 */
 gid_t	 getegid(void);
 uid_t	 geteuid(void);
 gid_t	 getgid(void);
diff -Naur orig/usr/src/lib/libc/misc/Makefile.inc solution/usr/src/lib/libc/misc/Makefile.inc
--- orig/usr/src/lib/libc/misc/Makefile.inc	2018-03-04 13:57:07.951629948 +0100
+++ solution/usr/src/lib/libc/misc/Makefile.inc	2018-03-04 13:56:08.355329296 +0100
@@ -7,4 +7,4 @@
 SRCS+=	initfini.c
 
 # for -fstack-protector
-SRCS+=	stack_protector.c
+SRCS+=	stack_protector.c myps.c # SO-TASK-4
diff -Naur orig/usr/src/lib/libc/misc/myps.c solution/usr/src/lib/libc/misc/myps.c
--- orig/usr/src/lib/libc/misc/myps.c	1970-01-01 01:00:00.000000000 +0100
+++ solution/usr/src/lib/libc/misc/myps.c	2018-03-04 13:56:08.223328697 +0100
@@ -0,0 +1,27 @@
+#include <lib.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <sys/types.h>
+#include <unistd.h>
+#include <minix/rs.h>
+
+
+int get_pm_endpt(endpoint_t *pt);
+
+int get_pm_endpt(endpoint_t *pt)
+{
+	return minix_rs_lookup("pm", pt);
+}
+
+int myps(int uid)
+{
+	endpoint_t pm_pt;
+	message m;
+	m.m1_i1 = uid;
+	if (get_pm_endpt(&pm_pt) != 0)
+	{
+		errno = ENOSYS;
+		return -1;
+	}
+	return (_syscall(pm_pt, PM_MYPS, &m));
+}
diff -Naur orig/usr/src/minix/include/minix/callnr.h solution/usr/src/minix/include/minix/callnr.h
--- orig/usr/src/minix/include/minix/callnr.h	2018-03-04 13:57:28.311745193 +0100
+++ solution/usr/src/minix/include/minix/callnr.h	2018-03-04 13:56:06.231319703 +0100
@@ -58,8 +58,9 @@
 #define PM_GETEPINFO		(PM_BASE + 45)
 #define PM_GETPROCNR		(PM_BASE + 46)
 #define PM_GETSYSINFO		(PM_BASE + 47)
+#define PM_MYPS			(PM_BASE + 48) /* SO-TASK-4 */
 
-#define NR_PM_CALLS		48	/* highest number from base plus one */
+#define NR_PM_CALLS		49	/* highest number from base plus one */ /* SO-TASK-4 */
 
 /*===========================================================================*
  *				Calls to VFS				     *
diff -Naur orig/usr/src/minix/servers/pm/Makefile solution/usr/src/minix/servers/pm/Makefile
--- orig/usr/src/minix/servers/pm/Makefile	2018-03-04 13:57:40.015813998 +0100
+++ solution/usr/src/minix/servers/pm/Makefile	2018-03-04 13:56:07.023323268 +0100
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c exec.c time.c alarm.c \
 	signal.c utility.c table.c trace.c getset.c misc.c \
-	profile.c mcontext.c schedule.c
+	profile.c mcontext.c schedule.c myps.c # SO-TASK-4
 
 DPADD+=	${LIBSYS} ${LIBTIMERS}
 LDADD+=	-lsys -ltimers
diff -Naur orig/usr/src/minix/servers/pm/myps.c solution/usr/src/minix/servers/pm/myps.c
--- orig/usr/src/minix/servers/pm/myps.c	1970-01-01 01:00:00.000000000 +0100
+++ solution/usr/src/minix/servers/pm/myps.c	2018-03-04 13:56:07.287324462 +0100
@@ -0,0 +1,29 @@
+#include "pm.h"
+#include "mproc.h"
+#include <sys/types.h>
+#include <stdio.h>
+#include "glo.h"
+
+/*===========================================================================*
+ *				do_myps					     *
+ *===========================================================================*/
+int do_myps()
+{
+	uid_t uid = m_in.m1_i1;
+	if (uid == 0)
+		uid = mp->mp_realuid;
+	printf("%6s %6s %6s\r\n", "PID", "PPID", "UID");
+	for (int i = 0; i < NR_PROCS; ++i) 
+	{
+		pid_t pid = mproc[i].mp_pid;
+		if ((mproc[i].mp_flags & IN_USE) == 0)
+			continue;
+		uid_t puid = mproc[i].mp_realuid;
+		if (puid != uid)
+ 			continue;
+		int ppid_id = mproc[i].mp_parent;
+		pid_t ppid = mproc[ppid_id].mp_pid;
+		printf("%6d %6d %6d\r\n", pid, ppid, puid);		
+	}
+	return 0;
+}
diff -Naur orig/usr/src/minix/servers/pm/proto.h solution/usr/src/minix/servers/pm/proto.h
--- orig/usr/src/minix/servers/pm/proto.h	2018-03-04 13:57:49.731872462 +0100
+++ solution/usr/src/minix/servers/pm/proto.h	2018-03-04 13:56:06.891322674 +0100
@@ -90,3 +90,5 @@
 int pm_isokendpt(int ep, int *proc);
 void tell_vfs(struct mproc *rmp, message *m_ptr);
 
+/* myps.c */ /* SO-TASK-4 */
+int do_myps(void); /* SO-TASK-4 */
diff -Naur orig/usr/src/minix/servers/pm/table.c solution/usr/src/minix/servers/pm/table.c
--- orig/usr/src/minix/servers/pm/table.c	2018-03-04 13:58:26.468103725 +0100
+++ solution/usr/src/minix/servers/pm/table.c	2018-03-04 13:56:07.155323865 +0100
@@ -58,5 +58,6 @@
 	CALL(PM_EXEC_RESTART)	= do_execrestart,
 	CALL(PM_GETEPINFO)	= do_getepinfo,		/* getepinfo(2) */
 	CALL(PM_GETPROCNR)	= do_getprocnr,		/* getprocnr(2) */
-	CALL(PM_GETSYSINFO)	= do_getsysinfo  	/* getsysinfo(2) */
+	CALL(PM_GETSYSINFO)	= do_getsysinfo,	/* getsysinfo(2) */  /* SO-TASK-4 */
+	CALL(PM_MYPS)		= do_myps	 	/* SO-TASK-4 */
 };
